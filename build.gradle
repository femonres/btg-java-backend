plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.btg_pactual'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

ext {
  set('springCloudVersion', "2023.0.3")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-function-web'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    implementation 'org.springframework.cloud:spring-cloud-starter-function-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-json'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'

    implementation 'software.amazon.awssdk:dynamodb'
    implementation 'software.amazon.awssdk:translate'
    implementation 'software.amazon.awssdk:sns'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom 'software.amazon.awssdk:bom:2.20.22'
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveBaseName.set('bgt_pactual')
    manifest {
        attributes(
            'Main-Class': 'com.btg_pactual.app.LambdaHandler'
        )
    }
}

task buildLambdaZip(type: Zip) {
    from compileJava
    from processResources
    archiveFileName.set('btg_backend.zip')
}
build.dependsOn buildLambdaZip